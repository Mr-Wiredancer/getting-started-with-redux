1
00:00:00,420 --> 00:00:02,210
在我们继续之前

2
00:00:02,210 --> 00:00:08,140
你必须理解纯函数和非纯函数的区别

3
00:00:08,140 --> 00:00:16,190
纯函数的返回值只依赖于它们的参数

4
00:00:16,190 --> 00:00:20,350
纯函数没有任何可见的副作用

5
00:00:20,350 --> 00:00:23,130
比如访问网络或数据库

6
00:00:23,560 --> 00:00:26,560
纯函数只用来产生新值

7
00:00:26,560 --> 00:00:30,510
可以很确定 如果使用相同的参数

8
00:00:30,510 --> 00:00:33,050
去调用纯函数

9
00:00:33,050 --> 00:00:35,740
你将必然得到相同的返回值

10
00:00:35,740 --> 00:00:37,180
这是可以预知的

11
00:00:37,740 --> 00:00:42,330
同时 纯函数不会修改传递进来的参数

12
00:00:42,330 --> 00:00:43,320
比如

13
00:00:43,320 --> 00:00:49,200
squaerAll 函数接受一个数组 但并没有改写这个数组中的元素

14
00:00:49,200 --> 00:00:53,070
相反 它通过调用 items.map() 返回一个新的数组

15
00:00:54,220 --> 00:00:55,260
相反的是

16
00:00:55,260 --> 00:00:59,640
非纯函数可能访问数据库或网络

17
00:00:59,760 --> 00:01:01,550
它们可能会产生副作用

18
00:01:01,550 --> 00:01:03,310
它们可能操作 DOM

19
00:01:03,310 --> 00:01:06,920
它们可能改写传递进来的参数

20
00:01:08,250 --> 00:01:10,780
这是很重要的区别

21
00:01:10,780 --> 00:01:16,280
因为在使用 Redux 时 有些函数实现必须是纯函数

22
00:01:16,280 --> 00:01:18,280
你需要留意这一点