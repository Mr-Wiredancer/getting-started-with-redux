在上一次的示例中 我使用了NPM中的“expect”和“deep-freeze"库来为我的测试做断言 这次我将测试“toggleTodo”这个方法 该方法取一个“todo”对象并将其“completed”属性翻转 如果“completed”的原始值为“false” 其返回结果将变为“true” 如果是“true” 其结果将变为“false”

就像上一节课一样 我将从写一个可变的版本开始来使当前的测试通过 这个版本只是将传入对象的 completed 属性的值翻转一下

当成功执行后 我们知道可变对象在Redux中是不允许的 为了达到这个目的 我在我的to-do对象上使用了“deepFreeze” 但是这样我将再也不能改变它的“completed”属性了

这个问题的一个方法是创建一个新对象 这个对象复制了原始对象所有属性但除了“complete”这个将被翻转的属性 如果我们后面再给新对象添加新属性 我们可能会忘记更新这段代码来包含他们

这就是为什么我建议你使用“Object.assign”这个ES6新方法的原因 它让你可以将多个对象的属性赋给目标对象 注意“Object.assign”参数顺序如何与JavaScript分配操作符相对应

左边的参数是赋值所有属性的对象 所以它是可变的 这就是为什么我们传一个空对象给第一个参数 所以我们不会改变任何已存在的数据 “Object.assign”的每一个其他参数将被认为一个源对象 源对象的属性将复制到目标对象

重要的一点是如果多个源对象中有相同名称的属性但有不同的属性值 最终替换的是最后一个源对象的值 并且这就是我们用来复写“completed”属性的值而不管原来“todo”对象里面的值是什么

最后 你需要记住“Object.assign”是一个ES6的新方法 所以它不是在所有浏览器中都能使用 你应该使用一个polyfill 可以使用Babel或者一个标准的“Object.assign"polyfill 这样可以避免让你的网站崩溃

另外一个选项不要求一个polyfill来使用新对象传播操作符 它不是ES6的一部分 尽管如此 它已经在ES7中被提议 它相当受欢迎 可以通过设置Babel中的“stage-2”属性来使用它
